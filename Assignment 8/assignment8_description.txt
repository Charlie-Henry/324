Neil Sethi-
Assigment 8 part 1: “10 Largest Cities Bar Graph”
In this part of the assignement I created a processing file to compare the populations of the 10 largest cities in the country.  I made a .csv file that has each cities 2018 population, 2016 population, 2010 population from the census, percent change, and population density.  The bar graph is made by taking in data frome each section and then scales the data either up or down in order to visualize it on the screen.  The scaled data us used to make the height of the bars and the actual value is printed on top of the bar.  I used gamestates to hold each of the five graphs.  I then used keypressed function to switch between each of the gamestates by pressing the enter button.  Unfortunatley I could not get the gamestates to restart so the only way to get back to a previous graph is to exit the program and restart it.  

Andrew Cheung - 
Assignment 8 part 3: "RSSReader"
This RSS reader was created in processing by getting XML data from BBC's RSS feed and displaying that data through processing. 
The BBC feeds are found here: http://news.bbc.co.uk/2/hi/help/rss/default.stm

Using getChild(), getChildren(), and getContent, I retrieved the XML data and used text() to display it onto the canvas. The function
link() was used to link each title to the webpage article and the url of the link was included in the XML data.
Our previous button class helped a lot because we were able to use it for the next and back buttons as well as checking for hovers of each title. The radio buttons allow the user to move from different feeds and are color coded to represent a feed. One problem I ran into was 
reading the description of the article and getting it to display to the next line. I accomplished thos by using substring() and if statements to check if the textwidth was larger than a certain size.


Charlie Henry - 
Assigment 8 part 2: “BCycle_OD”
This visualization was completed using data from the City of Austin's open data portal: data.austintexas.gov. BCycles are bikes that can be rented for short term use then returned to specific stations. This data is from January 2017 (before the recent UT rollout of BCycle stations). The datasets used were: 

Austin BCycle Kiosk Locations: https://data.austintexas.gov/Transportation-and-Mobility/Austin-B-Cycle-Kiosk-Locations/qd73-bsdg

Austin BCycle Trips: https://data.austintexas.gov/Transportation-and-Mobility/Austin-B-Cycle-Trips/tyfh-5r8s

Each row in the trip data has an origin and destination. The goal of this visualization was to allow users to see where bikes originating from a station end up. This data has multiple "axes" of data which was required from the assigment description:
	- Kiosk location (latitude/longitude)
	- Data of trips originiating from each station
	- Each trip's destination dependent on the selected station

The data analysis was done in Python using the bcycle_destinations.py script. It takes in the trip data exported from the open data portal in CSV format. It exports a table where each row is: origin station ID, destination station ID, and number of trips. 

The processing code plots each station's location based on a fraction of the screen size from the latitude and longitude information provided. It uses a screenshot of google maps as a static basemap file. When a station is clicked, the circle turns yellow and the name is displayed. All the circles will re-size based on the number of trips that end at those stations. 
It takes in mouse presses and animates the circles when they are clicked.
