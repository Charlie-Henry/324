Neil Sethi- Fireworks
In this assignment I created firework in processing.  The fireworks use gravity to in order to determine how high the firework will go.  Each firework has a randomly assigned amount of gravity applied to it so some of the fireworks will explode earlier than other and some will fly off the canvas.  One of the problems I had was that I could not figure out how to stop some of the fireworks from flying out of the canvas.  When the fireworks reach a certain point they use the particle system to make the effect of them exploding.  Every time a firework is created it is set to a random color and the particle created when they explode are the same color.  This program has two classes. The Firework class makes the fireworks, adds the gravity effect, makes the explosion, displays the firework, and checks to see if the firework is valid.  The ParticleSystem function implements the particle system after the explosion and does a second test to make sure the firework is valid.  One of the things I wanted to add to this animation was add some spirals or curves to the fireworks.  Unfortunately I could not get it to work.  

Andrew Cheung - Taxi car Physics Simulation
In this assignment, I made a car in processing based on physics simulation. The car moves with velocity and has acceleration as it travels. I created this part using Newton's law for the part including mass. When the car hits the wall/side of canvas, it bounces back and this was created using the spring formula. The car will then accelerate again towards the wall and each time it has less speed. This spring includes spring dampening. One problem I encountered was getting the car to reset after it hits the wall enough times and I solved this by creating a counter and reseting the car when the counter reached a certain number. My simulation was created using one class. The acceleration was one method and the spring as well as the spring dampening was another method. 

Charlie Henry - Trajectory simulation
This simulation throws various objects in a parabolic arc from a fixed position. When the simulation begins, an object is thrown at 45 degrees respect to the horizontal. Then, the user can pick the direction (based on an angle from the launch point), and the magnitude (the distance from the launch point) of the throw by clicking. The objects then "rebound" off the ground by using a coefficient of restitution of .75. The objects thrown are pshapes from various past assignments.
